/*! For license information please see app.bundle.js.LICENSE.txt */
(()=>{var e,t,n,r,o,i,a,d={347:(e,t,n)=>{"use strict";n(141);class r{constructor(){this.figcaptionId=0,this.userSettings=null}init(e,t,n){this.userSettings=n;const r=document.createElement("figure"),o=document.createElement("figcaption"),i=document.createElement("img"),a=e.querySelector("img"),d=document.createElement("div");r.style.opacity="0",a&&(i.alt=a.alt||""),i.setAttribute("src",""),i.setAttribute("data-src",e.href),e.hasAttribute("data-srcset")&&i.setAttribute("srcset",e.getAttribute("data-srcset")),r.appendChild(i),this.userSettings.captions&&("function"==typeof this.userSettings.captionText?o.textContent=this.userSettings.captionText(e):"self"===this.userSettings.captionsSelector&&e.getAttribute(this.userSettings.captionAttribute)?o.textContent=e.getAttribute(this.userSettings.captionAttribute):"img"===this.userSettings.captionsSelector&&a&&a.getAttribute(this.userSettings.captionAttribute)&&(o.textContent=a.getAttribute(this.userSettings.captionAttribute)),o.textContent&&(o.id=`tobii-figcaption-${this.figcaptionId}`,r.appendChild(o),i.setAttribute("aria-labelledby",o.id),++this.figcaptionId)),t.appendChild(r),d.className="tobii__loader",d.setAttribute("role","progressbar"),d.setAttribute("aria-label",this.userSettings.loadingIndicatorLabel),t.appendChild(d),t.setAttribute("data-type","image"),t.classList.add("tobii-image")}onPreload(e){this.onLoad(e)}onLoad(e){const t=e.querySelector("img");if(!t.hasAttribute("data-src"))return;const n=e.querySelector("figure"),r=e.querySelector(".tobii__loader");t.addEventListener("load",(()=>{e.removeChild(r),n.style.opacity="1"})),t.addEventListener("error",(()=>{e.removeChild(r),n.style.opacity="1"})),t.setAttribute("src",t.getAttribute("data-src")),t.removeAttribute("data-src")}onLeave(e){}onCleanup(e){}onReset(){this.figcaptionId=0}}class o{constructor(){this.userSettings=null}init(e,t,n){this.userSettings=n;const r=e.hasAttribute("data-target")?e.getAttribute("data-target"):e.getAttribute("href");t.setAttribute("data-HREF",r),e.getAttribute("data-allow")&&t.setAttribute("data-allow",e.getAttribute("data-allow")),e.hasAttribute("data-width")&&t.setAttribute("data-width",`${e.getAttribute("data-width")}`),e.hasAttribute("data-height")&&t.setAttribute("data-height",`${e.getAttribute("data-height")}`),t.setAttribute("data-type","iframe"),t.classList.add("tobii-iframe")}onPreload(e){}onLoad(e){let t=e.querySelector("iframe");const n=document.createElement("div");if(n.className="tobii__loader",n.setAttribute("role","progressbar"),n.setAttribute("aria-label",this.userSettings.loadingIndicatorLabel),e.appendChild(n),null==t){t=document.createElement("iframe");const n=e.getAttribute("data-href");t.setAttribute("frameborder","0"),t.setAttribute("src",n),t.setAttribute("allowfullscreen",""),n.indexOf("youtube.com")>-1?t.setAttribute("allow","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"):n.indexOf("vimeo.com")>-1?t.setAttribute("allow","autoplay; picture-in-picture"):e.hasAttribute("data-allow")&&t.setAttribute("allow",e.getAttribute("data-allow")),e.getAttribute("data-width")&&(t.style.maxWidth=`${e.getAttribute("data-width")}`),e.getAttribute("data-height")&&(t.style.maxHeight=`${e.getAttribute("data-height")}`),t.style.opacity="0",e.appendChild(t),t.addEventListener("load",(()=>{t.style.opacity="1";const n=e.querySelector(".tobii__loader");n&&e.removeChild(n)})),t.addEventListener("error",(()=>{t.style.opacity="1";const n=e.querySelector(".tobii__loader");n&&e.removeChild(n)}))}else t.setAttribute("src",e.getAttribute("data-href"))}onLeave(e){}onCleanup(e){const t=e.querySelector("iframe");t.setAttribute("src",""),t.style.opacity="0"}onReset(){}}class i{constructor(){this.userSettings=null}init(e,t,n){this.userSettings=n;const r=e.hasAttribute("data-target")?e.getAttribute("data-target"):e.getAttribute("href"),o=document.querySelector(r).cloneNode(!0);if(!o)throw new Error(`Ups, I can't find the target ${r}.`);t.appendChild(o),t.setAttribute("data-type","html"),t.classList.add("tobii-html")}onPreload(e){}onLoad(e){const t=e.querySelector("video");t&&(t.hasAttribute("data-time")&&t.readyState>0&&(t.currentTime=t.getAttribute("data-time")),this.userSettings.autoplayVideo&&t.play())}onLeave(e){const t=e.querySelector("video");t&&(t.paused||t.pause(),t.readyState>0&&t.setAttribute("data-time",t.currentTime))}onCleanup(e){const t=e.querySelector("video");if(t&&t.readyState>0&&t.readyState<3&&t.duration!==t.currentTime){const n=t.cloneNode(!0);this._removeSources(t),t.load(),t.parentNode.removeChild(t),e.appendChild(n)}}onReset(){}_removeSources(e){const t=e.querySelectorAll("src");t&&t.forEach((e=>{e.setAttribute("src","")}))}}class a{constructor(){this.playerId=0,this.PLAYER=[],this.userSettings=null}init(e,t,n){this.userSettings=n;const r=document.createElement("div");t.appendChild(r),this.PLAYER[this.playerId]=new window.YT.Player(r,{host:"https://www.youtube-nocookie.com",height:e.getAttribute("data-height")||"360",width:e.getAttribute("data-width")||"640",videoId:e.getAttribute("data-id"),playerVars:{controls:e.getAttribute("data-controls")||1,rel:0,playsinline:1}}),t.setAttribute("data-player",this.playerId),t.setAttribute("data-type","youtube"),t.classList.add("tobii-youtube"),this.playerId++}onPreload(e){}onLoad(e){this.userSettings.autoplayVideo&&this.PLAYER[e.getAttribute("data-player")].playVideo()}onLeave(e){1===this.PLAYER[e.getAttribute("data-player")].getPlayerState()&&this.PLAYER[e.getAttribute("data-player")].pauseVideo()}onCleanup(e){1===this.PLAYER[e.getAttribute("data-player")].getPlayerState()&&this.PLAYER[e.getAttribute("data-player")].pauseVideo()}onReset(){}}var d=n(933),s=n.n(d),l=n(630),c=n.n(l);new function e(t){const n={image:new r,html:new i,iframe:new o,youtube:new a},d=['a[href]:not([tabindex^="-"]):not([inert])','area[href]:not([tabindex^="-"]):not([inert])',"input:not([disabled]):not([inert])","select:not([disabled]):not([inert])","textarea:not([disabled]):not([inert])","button:not([disabled]):not([inert])",'iframe:not([tabindex^="-"]):not([inert])','audio:not([tabindex^="-"]):not([inert])','video:not([tabindex^="-"]):not([inert])','[contenteditable]:not([tabindex^="-"]):not([inert])','[tabindex]:not([tabindex^="-"]):not([inert])'];let s={};const l=[],c={gallery:[],slider:null,sliderElements:[],elementsLength:0,currentIndex:0,x:0};let u=null,p=null,f=null,h=null,m=null,b={},g=!1,v=!1,y=!1,w=null,x=null,E=null,A=!1,_=!1,L={},k=null,I=null;const S=e=>{if(null===document.querySelector('[data-type="youtube"]')||_)O(e);else{if(null===document.getElementById("iframe_api")){const e=document.createElement("script"),t=document.getElementsByTagName("script")[0];e.id="iframe_api",e.src="https://www.youtube.com/iframe_api",t.parentNode.insertBefore(e,t)}-1===l.indexOf(e)&&l.push(e),window.onYouTubePlayerAPIReady=()=>{l.forEach((e=>{O(e)})),_=!0}}},C=e=>e.hasAttribute("data-group")?e.getAttribute("data-group"):"default",O=e=>{if(k=C(e),Object.prototype.hasOwnProperty.call(L,k)||(L[k]=JSON.parse(JSON.stringify(c)),j()),-1!==L[k].gallery.indexOf(e))throw new Error("Ups, element already added.");if(L[k].gallery.push(e),L[k].elementsLength++,s.zoom&&e.querySelector("img")&&"false"!==e.getAttribute("data-zoom")||"true"===e.getAttribute("data-zoom")){const t=document.createElement("div");t.className="tobii-zoom__icon",t.innerHTML=s.zoomText,e.classList.add("tobii-zoom"),e.appendChild(t)}e.addEventListener("click",V),T(e),ce()&&k===I&&(de(),se(null))},P=e=>{const t=C(e);if(-1===L[t].gallery.indexOf(e))throw new Error(`Ups, I can't find a slide for the element ${e}.`);{const n=L[t].gallery.indexOf(e),r=L[t].sliderElements[n];if(ce()&&t===I&&n===L[t].currentIndex){if(1===L[t].elementsLength)throw H(),new Error("Ups, I've closed. There are no slides more to show.");0===L[t].currentIndex?U():R()}if(L[t].elementsLength--,s.zoom&&e.querySelector(".tobii-zoom__icon")){const t=e.querySelector(".tobii-zoom__icon");t.parentNode.classList.remove("tobii-zoom"),t.parentNode.removeChild(t)}e.removeEventListener("click",V),r.parentNode.removeChild(r)}},j=()=>{L[k].slider=document.createElement("div"),L[k].slider.className="tobii__slider",L[k].slider.setAttribute("aria-hidden","true"),u.appendChild(L[k].slider)},T=e=>{const t=D(e),n=document.createElement("div"),r=document.createElement("div");n.className="tobii__slide",n.style.position="absolute",n.style.left=100*L[k].x+"%",n.setAttribute("aria-hidden","true"),t.init(e,r,s),n.appendChild(r),L[k].slider.appendChild(n),L[k].sliderElements.push(n),++L[k].x},D=e=>{const t=e.getAttribute("data-type");return void 0!==n[t]?n[t]:(e.hasAttribute("data-type")&&console.log("Unknown lightbox element type: "+t),n.image)},M=e=>{if(I=null!==I?I:k,ce())throw new Error("Ups, I'm aleady open.");if(!ce()&&(e||(e=0),-1===e||e>=L[I].elementsLength))throw new Error(`Ups, I can't find slide ${e}.`);document.documentElement.classList.add("tobii-is-open"),document.body.classList.add("tobii-is-open"),document.body.classList.add("tobii-is-open-"+I),de(),s.close||(h.disabled=!1,h.setAttribute("aria-hidden","true")),w=document.activeElement;const t=window.location.href;window.history.pushState({tobii:"close"},"Image",t),L[I].currentIndex=e,X(),ie(),q(L[I].currentIndex),L[I].slider.setAttribute("aria-hidden","false"),u.setAttribute("aria-hidden","false"),se(null),N(L[I].currentIndex+1),N(L[I].currentIndex-1),L[I].slider.classList.add("tobii__slider--animate");const n=new window.CustomEvent("open",{detail:{group:I}});u.dispatchEvent(n)},H=()=>{if(!ce())throw new Error("Ups, I'm already closed.");document.documentElement.classList.remove("tobii-is-open"),document.body.classList.remove("tobii-is-open"),document.body.classList.remove("tobii-is-open-"+I),ae(),null!==window.history.state&&"close"===window.history.state.tobii&&window.history.back(),w.focus(),Y(L[I].currentIndex),B(L[I].currentIndex),u.setAttribute("aria-hidden","true"),L[I].slider.setAttribute("aria-hidden","true"),L[I].currentIndex=0,L[I].slider.classList.remove("tobii__slider--animate");const e=new window.CustomEvent("close",{detail:{group:I}});u.dispatchEvent(e)},N=e=>{if(void 0===L[I].sliderElements[e])return;const t=L[I].sliderElements[e].querySelector("[data-type]");D(t).onPreload(t)},q=e=>{if(void 0===L[I].sliderElements[e])return;const t=L[I].sliderElements[e].querySelector("[data-type]"),n=D(t);L[I].sliderElements[e].classList.add("tobii__slide--is-active"),L[I].sliderElements[e].setAttribute("aria-hidden","false"),n.onLoad(t)},R=()=>{if(!ce())throw new Error("Ups, I'm closed.");L[I].currentIndex>0&&(Y(L[I].currentIndex),q(--L[I].currentIndex),se("left"),B(L[I].currentIndex+1),N(L[I].currentIndex-1));const e=new window.CustomEvent("previous",{detail:{group:I}});u.dispatchEvent(e)},U=()=>{if(!ce())throw new Error("Ups, I'm closed.");L[I].currentIndex<L[I].elementsLength-1&&(Y(L[I].currentIndex),q(++L[I].currentIndex),se("right"),B(L[I].currentIndex-1),N(L[I].currentIndex+1));const e=new window.CustomEvent("next",{detail:{group:I}});u.dispatchEvent(e)},z=e=>{if(ce())throw new Error("Ups, I'm open.");if(!e)throw new Error("Ups, no group specified.");if(e&&!Object.prototype.hasOwnProperty.call(L,e))throw new Error(`Ups, I don't have a group called "${e}".`);I=e},Y=e=>{if(void 0===L[I].sliderElements[e])return;const t=L[I].sliderElements[e].querySelector("[data-type]"),n=D(t);L[I].sliderElements[e].classList.remove("tobii__slide--is-active"),L[I].sliderElements[e].setAttribute("aria-hidden","true"),n.onLeave(t)},B=e=>{if(void 0===L[I].sliderElements[e])return;const t=L[I].sliderElements[e].querySelector("[data-type]");D(t).onCleanup(t)},$=()=>{I=null!==I?I:k,x=-L[I].currentIndex*u.offsetWidth,L[I].slider.style.transform=`translate3d(${x}px, 0, 0)`,E=x},X=()=>{b={startX:0,endX:0,startY:0,endY:0}},F=()=>{const e=b.endX-b.startX,t=b.endY-b.startY,n=Math.abs(e),r=Math.abs(t);e>0&&n>s.threshold&&L[I].currentIndex>0?R():e<0&&n>s.threshold&&L[I].currentIndex!==L[I].elementsLength-1?U():t<0&&r>s.threshold&&s.swipeClose?H():$()},W=()=>{A||(A=!0,window.requestAnimationFrame((()=>{$(),A=!1})))},V=e=>{e.preventDefault(),I=C(e.currentTarget),M(L[I].gallery.indexOf(e.currentTarget))},K=e=>{e.target===p?R():e.target===f?U():(e.target===h||!1===g&&!1===v&&e.target.classList.contains("tobii__slide")&&s.docClose)&&H(),e.stopPropagation()},Z=e=>{const t=Array.prototype.slice.call(u.querySelectorAll(`.tobii__btn:not([disabled]), .tobii__slide--is-active ${d.join(", .tobii__slide--is-active ")}`)).filter((e=>!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length))),n=t.indexOf(document.activeElement);9===e.keyCode||"Tab"===e.code?e.shiftKey&&0===n?(t[t.length-1].focus(),e.preventDefault()):e.shiftKey||n!==t.length-1||(t[0].focus(),e.preventDefault()):27===e.keyCode||"Escape"===e.code?(e.preventDefault(),H()):37===e.keyCode||"ArrowLeft"===e.code?(e.preventDefault(),R()):39!==e.keyCode&&"ArrowRight"!==e.code||(e.preventDefault(),U())},G=e=>{pe(e.target)||(e.stopPropagation(),g=!1,v=!1,y=!0,b.startX=e.touches[0].pageX,b.startY=e.touches[0].pageY,ue()&&L[I].slider.classList.add("tobii__slider--is-dragging"))},J=e=>{e.stopPropagation(),y&&(b.endX=e.touches[0].pageX,b.endY=e.touches[0].pageY,oe())},Q=e=>{e.stopPropagation(),y=!1,L[I].slider.classList.remove("tobii__slider--is-dragging"),b.endX&&F(),X()},ee=e=>{pe(e.target)||(e.preventDefault(),e.stopPropagation(),g=!1,v=!1,y=!0,b.startX=e.pageX,b.startY=e.pageY,ue()&&L[I].slider.classList.add("tobii__slider--is-dragging"))},te=e=>{e.preventDefault(),y&&(b.endX=e.pageX,b.endY=e.pageY,oe())},ne=e=>{e.stopPropagation(),y=!1,L[I].slider.classList.remove("tobii__slider--is-dragging"),b.endX&&F(),X()},re=()=>{y=!1},oe=()=>{Math.abs(b.startX-b.endX)>0&&!v&&L[I].elementsLength>1?(L[I].slider.style.transform=`translate3d(${E-Math.round(b.startX-b.endX)}px, 0, 0)`,g=!0,v=!1):Math.abs(b.startY-b.endY)>0&&!g&&s.swipeClose&&(L[I].slider.style.transform=`translate3d(${E}px, -${Math.round(b.startY-b.endY)}px, 0)`,g=!1,v=!0)},ie=()=>{s.keyboard&&window.addEventListener("keydown",Z),window.addEventListener("resize",W),window.addEventListener("popstate",H),u.addEventListener("click",K),s.draggable&&ue()&&(u.addEventListener("touchstart",G),u.addEventListener("touchmove",J),u.addEventListener("touchend",Q),u.addEventListener("mousedown",ee),u.addEventListener("mouseup",ne),u.addEventListener("mousemove",te),u.addEventListener("contextmenu",re))},ae=()=>{s.keyboard&&window.removeEventListener("keydown",Z),window.removeEventListener("resize",W),window.removeEventListener("popstate",H),u.removeEventListener("click",K),s.draggable&&ue()&&(u.removeEventListener("touchstart",G),u.removeEventListener("touchmove",J),u.removeEventListener("touchend",Q),u.removeEventListener("mousedown",ee),u.removeEventListener("mouseup",ne),u.removeEventListener("mousemove",te),u.removeEventListener("contextmenu",re))},de=()=>{(s.draggable&&s.swipeClose&&ue()&&!L[I].slider.classList.contains("tobii__slider--is-draggable")||s.draggable&&L[I].elementsLength>1&&!L[I].slider.classList.contains("tobii__slider--is-draggable"))&&L[I].slider.classList.add("tobii__slider--is-draggable"),!s.nav||1===L[I].elementsLength||"auto"===s.nav&&ue()?(p.setAttribute("aria-hidden","true"),p.disabled=!0,f.setAttribute("aria-hidden","true"),f.disabled=!0):(p.setAttribute("aria-hidden","false"),p.disabled=!1,f.setAttribute("aria-hidden","false"),f.disabled=!1),m.setAttribute("aria-hidden",s.counter&&1!==L[I].elementsLength?"false":"true")},se=e=>{$(),m.textContent=`${L[I].currentIndex+1}/${L[I].elementsLength}`,(e=>{(!0===s.nav||"auto"===s.nav)&&!ue()&&L[I].elementsLength>1?(p.setAttribute("aria-hidden","true"),p.disabled=!0,f.setAttribute("aria-hidden","true"),f.disabled=!0,1===L[I].elementsLength?s.close&&h.focus():0===L[I].currentIndex?(f.setAttribute("aria-hidden","false"),f.disabled=!1,f.focus()):L[I].currentIndex===L[I].elementsLength-1?(p.setAttribute("aria-hidden","false"),p.disabled=!1,p.focus()):(p.setAttribute("aria-hidden","false"),p.disabled=!1,f.setAttribute("aria-hidden","false"),f.disabled=!1,"left"===e?p.focus():f.focus())):s.close&&h.focus()})(e)},le=()=>{ce()&&H(),Object.entries(L).forEach((e=>{e[1].gallery.forEach((e=>{P(e)}))})),L={},k=I=null;for(const e in n)n[e].onReset()},ce=()=>"false"===u.getAttribute("aria-hidden"),ue=()=>"ontouchstart"in window,pe=e=>-1!==["TEXTAREA","OPTION","INPUT","SELECT"].indexOf(e.nodeName)||e===p||e===f||e===h;return(e=>{if(document.querySelector("div.tobii"))return void console.log("Multiple lightbox instances not supported.");s=(e=>({selector:".lightbox",captions:!0,captionsSelector:"img",captionAttribute:"alt",captionText:null,nav:"auto",navText:['<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" focusable="false"><path stroke="none" d="M0 0h24v24H0z"/><polyline points="15 6 9 12 15 18" /></svg>','<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" focusable="false"><path stroke="none" d="M0 0h24v24H0z"/><polyline points="9 6 15 12 9 18" /></svg>'],navLabel:["Previous image","Next image"],close:!0,closeText:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" focusable="false"><path stroke="none" d="M0 0h24v24H0z"/><line x1="18" y1="6" x2="6" y2="18" /><line x1="6" y1="6" x2="18" y2="18" /></svg>',closeLabel:"Close lightbox",loadingIndicatorLabel:"Image loading",counter:!0,download:!1,downloadText:"",downloadLabel:"Download image",keyboard:!0,zoom:!0,zoomText:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" focusable="false"><path stroke="none" d="M0 0h24v24H0z"/><polyline points="16 4 20 4 20 8" /><line x1="14" y1="10" x2="20" y2="4" /><polyline points="8 20 4 20 4 16" /><line x1="4" y1="20" x2="10" y2="14" /><polyline points="16 20 20 20 20 16" /><line x1="14" y1="14" x2="20" y2="20" /><polyline points="8 4 4 4 4 8" /><line x1="4" y1="4" x2="10" y2="10" /></svg>',docClose:!0,swipeClose:!0,hideScrollbar:!0,draggable:!0,threshold:100,rtl:!1,loop:!1,autoplayVideo:!1,modal:!1,theme:"tobii--theme-default",...e}))(e),u||(u=document.createElement("div"),u.setAttribute("role","dialog"),u.setAttribute("aria-hidden","true"),u.classList.add("tobii"),u.classList.add(s.theme),p=document.createElement("button"),p.className="tobii__btn tobii__btn--previous",p.setAttribute("type","button"),p.setAttribute("aria-label",s.navLabel[0]),p.innerHTML=s.navText[0],u.appendChild(p),f=document.createElement("button"),f.className="tobii__btn tobii__btn--next",f.setAttribute("type","button"),f.setAttribute("aria-label",s.navLabel[1]),f.innerHTML=s.navText[1],u.appendChild(f),h=document.createElement("button"),h.className="tobii__btn tobii__btn--close",h.setAttribute("type","button"),h.setAttribute("aria-label",s.closeLabel),h.innerHTML=s.closeText,u.appendChild(h),m=document.createElement("div"),m.className="tobii__counter",u.appendChild(m),document.body.appendChild(u));const t=document.querySelectorAll(s.selector);if(!t)throw new Error(`Ups, I can't find the selector ${s.selector} on this website.`);const n=[];t.forEach((e=>{const t=e.hasAttribute("data-group")?e.getAttribute("data-group"):"default";let r=e.href;e.hasAttribute("data-target")&&(r=e.getAttribute("data-target")),r+="__"+t,void 0!==n[r]?e.addEventListener("click",(e=>{z(t),M(),e.preventDefault()})):(n[r]=1,S(e))}))})(t),e.open=M,e.previous=R,e.next=U,e.close=H,e.add=S,e.remove=P,e.reset=le,e.destroy=()=>{le(),u.parentNode.removeChild(u)},e.isOpen=ce,e.slidesIndex=()=>L[I].currentIndex,e.select=e=>{const t=L[I].currentIndex;if(!ce())throw new Error("Ups, I'm closed.");if(ce()){if(!e&&0!==e)throw new Error("Ups, no slide specified.");if(e===L[I].currentIndex)throw new Error(`Ups, slide ${e} is already selected.`);if(-1===e||e>=L[I].elementsLength)throw new Error(`Ups, I can't find slide ${e}.`)}L[I].currentIndex=e,Y(t),q(e),e<t&&(se("left"),B(t),N(e-1)),e>t&&(se("right"),B(t),N(e+1))},e.slidesCount=()=>L[I].elementsLength,e.selectGroup=z,e.currentGroup=()=>null!==I?I:k,e.on=(e,t)=>{u.addEventListener(e,t)},e.off=(e,t)=>{u.removeEventListener(e,t)},e},s()({name:"Mobile App Landing Page",url:"https://www.producthunt.com/posts/mobile-app-landing-page",bottom:"96px",width:"450px"}),window.addEventListener("load",(function(){(new(c())).showWidget()}))},630:function(e){var t;"undefined"!=typeof self&&self,t=function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="./src/index.js")}({"./src/darkmode.js":function(e,t,n){"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.IS_BROWSER=void 0;var o="undefined"!=typeof window;t.IS_BROWSER=o;var i=function(){function e(t){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o){t=Object.assign({},{bottom:"32px",right:"32px",left:"unset",time:"0.3s",mixColor:"#fff",backgroundColor:"#fff",buttonColorDark:"#100f2c",buttonColorLight:"#fff",label:"",saveInCookies:!0,autoMatchOsTheme:!0},t);var n="\n      .darkmode-layer {\n        position: fixed;\n        pointer-events: none;\n        background: ".concat(t.mixColor,";\n        transition: all ").concat(t.time," ease;\n        mix-blend-mode: difference;\n      }\n\n      .darkmode-layer--button {\n        width: 2.9rem;\n        height: 2.9rem;\n        border-radius: 50%;\n        right: ").concat(t.right,";\n        bottom: ").concat(t.bottom,";\n        left: ").concat(t.left,";\n      }\n\n      .darkmode-layer--simple {\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        transform: scale(1) !important;\n      }\n\n      .darkmode-layer--expanded {\n        transform: scale(100);\n        border-radius: 0;\n      }\n\n      .darkmode-layer--no-transition {\n        transition: none;\n      }\n\n      .darkmode-toggle {\n        background: ").concat(t.buttonColorDark,";\n        width: 3rem;\n        height: 3rem;\n        position: fixed;\n        border-radius: 50%;\n        border:none;\n        right: ").concat(t.right,";\n        bottom: ").concat(t.bottom,";\n        left: ").concat(t.left,";\n        cursor: pointer;\n        transition: all 0.5s ease;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n\n      .darkmode-toggle--white {\n        background: ").concat(t.buttonColorLight,";\n      }\n\n      .darkmode-toggle--inactive {\n        display: none;\n      }\n\n      .darkmode-background {\n        background: ").concat(t.backgroundColor,";\n        position: fixed;\n        pointer-events: none;\n        z-index: -10;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n      }\n\n      img, .darkmode-ignore {\n        isolation: isolate;\n        display: inline-block;\n      }\n\n      @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\n        .darkmode-toggle {display: none !important}\n      }\n\n      @supports (-ms-ime-align:auto), (-ms-accelerator:true) {\n        .darkmode-toggle {display: none !important}\n      }\n    "),r=document.createElement("div"),i=document.createElement("button"),a=document.createElement("div");i.innerHTML=t.label,i.classList.add("darkmode-toggle--inactive"),r.classList.add("darkmode-layer"),a.classList.add("darkmode-background");var d="true"===window.localStorage.getItem("darkmode"),s=t.autoMatchOsTheme&&window.matchMedia("(prefers-color-scheme: dark)").matches,l=null===window.localStorage.getItem("darkmode");(!0===d&&t.saveInCookies||l&&s)&&(r.classList.add("darkmode-layer--expanded","darkmode-layer--simple","darkmode-layer--no-transition"),i.classList.add("darkmode-toggle--white"),document.body.classList.add("darkmode--activated")),document.body.insertBefore(i,document.body.firstChild),document.body.insertBefore(r,document.body.firstChild),document.body.insertBefore(a,document.body.firstChild),this.addStyle(n),this.button=i,this.layer=r,this.saveInCookies=t.saveInCookies,this.time=t.time}}var t,n;return t=e,(n=[{key:"addStyle",value:function(e){var t=document.createElement("link");t.setAttribute("rel","stylesheet"),t.setAttribute("type","text/css"),t.setAttribute("href","data:text/css;charset=UTF-8,"+encodeURIComponent(e)),document.head.appendChild(t)}},{key:"showWidget",value:function(){var e=this;if(o){var t=this.button,n=this.layer,r=1e3*parseFloat(this.time);t.classList.add("darkmode-toggle"),t.classList.remove("darkmode-toggle--inactive"),t.setAttribute("aria-label","Activate dark mode"),t.setAttribute("aria-checked","false"),t.setAttribute("role","checkbox"),n.classList.add("darkmode-layer--button"),t.addEventListener("click",(function(){var o=e.isActivated();o?(n.classList.remove("darkmode-layer--simple"),t.setAttribute("disabled",!0),setTimeout((function(){n.classList.remove("darkmode-layer--no-transition"),n.classList.remove("darkmode-layer--expanded"),t.removeAttribute("disabled")}),1)):(n.classList.add("darkmode-layer--expanded"),t.setAttribute("disabled",!0),setTimeout((function(){n.classList.add("darkmode-layer--no-transition"),n.classList.add("darkmode-layer--simple"),t.removeAttribute("disabled")}),r)),t.classList.toggle("darkmode-toggle--white"),document.body.classList.toggle("darkmode--activated"),window.localStorage.setItem("darkmode",!o)}))}}},{key:"toggle",value:function(){if(o){var e=this.layer,t=this.isActivated(),n=this.button;e.classList.toggle("darkmode-layer--simple"),document.body.classList.toggle("darkmode--activated"),window.localStorage.setItem("darkmode",!t),n.setAttribute("aria-label","De-activate dark mode"),n.setAttribute("aria-checked","true")}}},{key:"isActivated",value:function(){return o?document.body.classList.contains("darkmode--activated"):null}}])&&r(t.prototype,n),e}();t.default=i},"./src/index.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(n("./src/darkmode.js")),o=r.default;t.default=o,r.IS_BROWSER&&function(e){e.Darkmode=r.default}(window),e.exports=t.default}})},e.exports=t()},783:(e,t,n)=>{"use strict";var r=n(618),o=Object.create(null),i="undefined"==typeof document,a=Array.prototype.forEach;function d(){}function s(e,t){if(!t){if(!e.href)return;t=e.href.split("?")[0]}if(c(t)&&!1!==e.isLoaded&&t&&t.indexOf(".css")>-1){e.visited=!0;var n=e.cloneNode();n.isLoaded=!1,n.addEventListener("load",(function(){n.isLoaded||(n.isLoaded=!0,e.parentNode.removeChild(e))})),n.addEventListener("error",(function(){n.isLoaded||(n.isLoaded=!0,e.parentNode.removeChild(e))})),n.href="".concat(t,"?").concat(Date.now()),e.nextSibling?e.parentNode.insertBefore(n,e.nextSibling):e.parentNode.appendChild(n)}}function l(){var e=document.querySelectorAll("link");a.call(e,(function(e){!0!==e.visited&&s(e)}))}function c(e){return!!/^[a-zA-Z][a-zA-Z\d+\-.]*:/.test(e)}e.exports=function(e,t){if(i)return console.log("no window.document found, will not HMR CSS"),d;var n,u,p=function(e){var t=o[e];if(!t){if(document.currentScript)t=document.currentScript.src;else{var n=document.getElementsByTagName("script"),i=n[n.length-1];i&&(t=i.src)}o[e]=t}return function(e){if(!t)return null;var n=t.split(/([^\\/]+)\.js$/),o=n&&n[1];return o&&e?e.split(",").map((function(e){var n=new RegExp("".concat(o,"\\.js$"),"g");return r(t.replace(n,"".concat(e.replace(/{fileName}/g,o),".css")))})):[t.replace(".js",".css")]}}(e);return n=function(){var e=p(t.filename),n=function(e){if(!e)return!1;var t=document.querySelectorAll("link"),n=!1;return a.call(t,(function(t){if(t.href){var o=function(e,t){var n;return e=r(e,{stripWWW:!1}),t.some((function(r){e.indexOf(t)>-1&&(n=r)})),n}(t.href,e);c(o)&&!0!==t.visited&&o&&(s(t,o),n=!0)}})),n}(e);if(t.locals)return console.log("[HMR] Detected local css modules. Reload all css"),void l();n?console.log("[HMR] css reload %s",e.join(" ")):(console.log("[HMR] Reload all css"),l())},50,u=0,function(){var e=this,t=arguments,r=function(){return n.apply(e,t)};clearTimeout(u),u=setTimeout(r,50)}}},618:e=>{"use strict";e.exports=function(e){if(e=e.trim(),/^data:/i.test(e))return e;var t=-1!==e.indexOf("//")?e.split("//")[0]+"//":"",n=e.replace(new RegExp(t,"i"),"").split("/"),r=n[0].toLowerCase().replace(/\.$/,"");return n[0]="",t+r+n.reduce((function(e,t){switch(t){case"..":e.pop();break;case".":break;default:e.push(t)}return e}),[]).join("/")}},141:(e,t,n)=>{"use strict";var r=n(783)(e.id,{locals:!1});e.hot.dispose(r),e.hot.accept(void 0,r)},933:function(e){var t;"undefined"!=typeof self&&self,t=function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="./src/index.js")}({"./src/floatingPrompt.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.name,n=e.url,r=e.text?e.text:"Hi, do you like ".concat(t," ? Don't forget to show your love on Product Hunt 🚀"),o=e.buttonText?e.buttonText:"".concat(t," on Product Hunt"),i=e.width?e.width:"300px",a=e.bottom?e.bottom:"32px",d=e.right?e.right:"32px",s=e.left?e.left:"unset",l=e.colorOne?e.colorOne:"#da552f",c=e.colorTwo?e.colorTwo:"#ea8e39",u="boolean"!=typeof e.saveInCookies||e.saveInCookies,p=e.target?e.target:"_blank",f="product-hunt-".concat(t.toLowerCase().replace(/[^a-zA-Z]+/g,"-")),h='<div class="producthunt" id="'.concat(f,'"> <span class="producthunt__close" id="').concat(f,'-close">×</span><p class="producthunt__text">').concat(r,'</p> <a href="').concat(n,'" class="ph-button" target="').concat(p,'">').concat(o,"</a></div>"),m="\n  .ph-button {\n    background: linear-gradient(65deg,".concat(l,",").concat(c,");\n    font-family: sans-serif;\n    color: #fff !important;\n    display: block;\n    letter-spacing: 0;\n    font-weight: 700;\n    line-height: 16px;\n    font-size: 14px;\n    text-transform: uppercase;\n    text-decoration: none!important;\n    border: none;\n    border-radius: 2px;\n    cursor: pointer;\n    justify-content: center;\n    padding: 16px 16px;\n    text-align: center;\n    white-space: nowrap;\n    box-shadow: 0 8px 24px rgba(32,43,54,.12);\n    transition: all .3s ease;\n    margin-top: 16px;\n    font-size: 14px;\n  }\n  .ph-button:hover {\n    box-shadow: 0 6px 24px rgba(32,43,54,.4);\n  }\n  .producthunt {\n    position: fixed;\n    background-color: #fff;\n    padding: 24px;\n    box-shadow: 0 4px 16px rgba(16, 31, 59, 0.16);\n    z-index: 10;\n    font-size: 16px;\n    color: #65638f;\n    font-family: sans-serif;\n    opacity: 1;\n    transition: all .3s ease;\n  }\n  .producthunt__close {\n    position: absolute;\n    right: 16px;\n    top: 8px;\n    cursor: pointer;\n  }\n  .producthunt__text {\n    margin: 0;\n  }\n  @media (max-width: 768px) {\n    .producthunt {\n      width: calc(100% - 48px) !important;\n      bottom: 0 !important;\n      right: 0 !important;\n      left: 0 !important;\n      box-shadow: 0 -4px 16px rgba(16, 31, 59, 0.16) !important;\n    }\n  }");window.localStorage.getItem(f)&&0!=u||(function(e){var t=document.createElement("div");t.innerHTML=e,document.body.appendChild(t)}(h),function(e,t,n,r,o){var i=document.getElementById(e);i.style.bottom=t,i.style.left=n||"unset",i.style.right=r||"unset",i.style.width=o}(f,a,s,d,i),function(e){var t=document.getElementById(e);document.getElementById("".concat(e,"-close")).addEventListener("click",(function(){t.style.opacity=0,setTimeout((function(){t.parentNode.removeChild(t),window.localStorage.setItem(e,!0)}),300)}))}(f),function(e){var t=document.createElement("link");t.setAttribute("rel","stylesheet"),t.setAttribute("type","text/css"),t.setAttribute("href","data:text/css;charset=UTF-8,"+encodeURIComponent(e)),document.head.appendChild(t)}(m))},e.exports=t.default},"./src/index.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,o=(r=n("./src/floatingPrompt.js"))&&r.__esModule?r:{default:r},i=o.default;t.default=i,function(e){e.FloatingPrompt=o.default}(window),e.exports=t.default}})},e.exports=t()}},s={};function l(e){var t=s[e];if(void 0!==t){if(void 0!==t.error)throw t.error;return t.exports}var n=s[e]={id:e,exports:{}};try{var r={id:e,module:n,factory:d[e],require:l};l.i.forEach((function(e){e(r)})),n=r.module,r.factory.call(n.exports,n,n.exports,r.require)}catch(e){throw n.error=e,e}return n.exports}l.m=d,l.c=s,l.i=[],l.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return l.d(t,{a:t}),t},l.d=(e,t)=>{for(var n in t)l.o(t,n)&&!l.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},l.hu=e=>e+"."+l.h()+".hot-update.js",l.miniCssF=e=>"app.css",l.hmrF=()=>"app."+l.h()+".hot-update.json",l.h=()=>"1e1484e5c71135bb5655",l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="mobile-app-landingpage-template:",l.l=(n,r,o,i)=>{if(e[n])e[n].push(r);else{var a,d;if(void 0!==o)for(var s=document.getElementsByTagName("script"),c=0;c<s.length;c++){var u=s[c];if(u.getAttribute("src")==n||u.getAttribute("data-webpack")==t+o){a=u;break}}a||(d=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,l.nc&&a.setAttribute("nonce",l.nc),a.setAttribute("data-webpack",t+o),a.src=n),e[n]=[r];var p=(t,r)=>{a.onerror=a.onload=null,clearTimeout(f);var o=e[n];if(delete e[n],a.parentNode&&a.parentNode.removeChild(a),o&&o.forEach((e=>e(r))),t)return t(r)},f=setTimeout(p.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=p.bind(null,a.onerror),a.onload=p.bind(null,a.onload),d&&document.head.appendChild(a)}},(()=>{var e,t,n,r,o={},i=l.c,a=[],d=[],s="idle";function c(e){s=e;for(var t=[],n=0;n<d.length;n++)t[n]=d[n].call(null,e);return Promise.all(t)}function u(e){if(0===t.length)return e();var n=t;return t=[],Promise.all(n).then((function(){return u(e)}))}function p(e){if("idle"!==s)throw new Error("check() is only allowed in idle status");return c("check").then(l.hmrM).then((function(r){return r?c("prepare").then((function(){var o=[];return t=[],n=[],Promise.all(Object.keys(l.hmrC).reduce((function(e,t){return l.hmrC[t](r.c,r.r,r.m,e,n,o),e}),[])).then((function(){return u((function(){return e?h(e):c("ready").then((function(){return o}))}))}))})):c(m()?"ready":"idle").then((function(){return null}))}))}function f(e){return"ready"!==s?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status")})):h(e)}function h(e){e=e||{},m();var t=n.map((function(t){return t(e)}));n=void 0;var o=t.map((function(e){return e.error})).filter(Boolean);if(o.length>0)return c("abort").then((function(){throw o[0]}));var i=c("dispose");t.forEach((function(e){e.dispose&&e.dispose()}));var a,d=c("apply"),s=function(e){a||(a=e)},l=[];return t.forEach((function(e){if(e.apply){var t=e.apply(s);if(t)for(var n=0;n<t.length;n++)l.push(t[n])}})),Promise.all([i,d]).then((function(){return a?c("fail").then((function(){throw a})):r?h(e).then((function(e){return l.forEach((function(t){e.indexOf(t)<0&&e.push(t)})),e})):c("idle").then((function(){return l}))}))}function m(){if(r)return n||(n=[]),Object.keys(l.hmrI).forEach((function(e){r.forEach((function(t){l.hmrI[e](t,n)}))})),r=void 0,!0}l.hmrD=o,l.i.push((function(h){var m,b,g,v,y=h.module,w=function(n,r){var o=i[r];if(!o)return n;var d=function(t){if(o.hot.active){if(i[t]){var d=i[t].parents;-1===d.indexOf(r)&&d.push(r)}else a=[r],e=t;-1===o.children.indexOf(t)&&o.children.push(t)}else console.warn("[HMR] unexpected require("+t+") from disposed module "+r),a=[];return n(t)},l=function(e){return{configurable:!0,enumerable:!0,get:function(){return n[e]},set:function(t){n[e]=t}}};for(var p in n)Object.prototype.hasOwnProperty.call(n,p)&&"e"!==p&&Object.defineProperty(d,p,l(p));return d.e=function(e){return function(e){switch(s){case"ready":return c("prepare"),t.push(e),u((function(){return c("ready")})),e;case"prepare":return t.push(e),e;default:return e}}(n.e(e))},d}(h.require,h.id);y.hot=(m=h.id,b=y,v={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:g=e!==m,_requireSelf:function(){a=b.parents.slice(),e=g?void 0:m,l(m)},active:!0,accept:function(e,t,n){if(void 0===e)v._selfAccepted=!0;else if("function"==typeof e)v._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var r=0;r<e.length;r++)v._acceptedDependencies[e[r]]=t||function(){},v._acceptedErrorHandlers[e[r]]=n;else v._acceptedDependencies[e]=t||function(){},v._acceptedErrorHandlers[e]=n},decline:function(e){if(void 0===e)v._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var t=0;t<e.length;t++)v._declinedDependencies[e[t]]=!0;else v._declinedDependencies[e]=!0},dispose:function(e){v._disposeHandlers.push(e)},addDisposeHandler:function(e){v._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=v._disposeHandlers.indexOf(e);t>=0&&v._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,s){case"idle":n=[],Object.keys(l.hmrI).forEach((function(e){l.hmrI[e](m,n)})),c("ready");break;case"ready":Object.keys(l.hmrI).forEach((function(e){l.hmrI[e](m,n)}));break;case"prepare":case"check":case"dispose":case"apply":(r=r||[]).push(m)}},check:p,apply:f,status:function(e){if(!e)return s;d.push(e)},addStatusHandler:function(e){d.push(e)},removeStatusHandler:function(e){var t=d.indexOf(e);t>=0&&d.splice(t,1)},data:o[m]},e=void 0,v),y.parents=a,y.children=[],a=[],h.require=w})),l.hmrC={},l.hmrI={}})(),l.p="/assets/",n=(e,t,n,r)=>{var o=document.createElement("link");return o.rel="stylesheet",o.type="text/css",o.onerror=o.onload=i=>{if(o.onerror=o.onload=null,"load"===i.type)n();else{var a=i&&("load"===i.type?"missing":i.type),d=i&&i.target&&i.target.href||t,s=new Error("Loading CSS chunk "+e+" failed.\n("+d+")");s.code="CSS_CHUNK_LOAD_FAILED",s.type=a,s.request=d,o.parentNode.removeChild(o),r(s)}},o.href=t,document.head.appendChild(o),o},r=(e,t)=>{for(var n=document.getElementsByTagName("link"),r=0;r<n.length;r++){var o=(a=n[r]).getAttribute("data-href")||a.getAttribute("href");if("stylesheet"===a.rel&&(o===e||o===t))return a}var i=document.getElementsByTagName("style");for(r=0;r<i.length;r++){var a;if((o=(a=i[r]).getAttribute("data-href"))===e||o===t)return a}},o=[],i=[],a=e=>({dispose:()=>{for(var e=0;e<o.length;e++){var t=o[e];t.parentNode&&t.parentNode.removeChild(t)}o.length=0},apply:()=>{for(var e=0;e<i.length;e++)i[e].rel="stylesheet";i.length=0}}),l.hmrC.miniCss=(e,t,d,s,c,u)=>{c.push(a),e.forEach((e=>{var t=l.miniCssF(e),a=l.p+t,d=r(t,a);d&&s.push(new Promise(((t,r)=>{var s=n(e,a,(()=>{s.as="style",s.rel="preload",t()}),r);o.push(d),i.push(s)})))}))},(()=>{var e,t,n,r,o=l.hmrS_jsonp=l.hmrS_jsonp||{143:0},i={};function a(e){return new Promise(((t,n)=>{i[e]=t;var r=l.p+l.hu(e),o=new Error;l.l(r,(t=>{if(i[e]){i[e]=void 0;var r=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;o.message="Loading hot update chunk "+e+" failed.\n("+r+": "+a+")",o.name="ChunkLoadError",o.type=r,o.request=a,n(o)}}))}))}function d(i){function a(e){for(var t=[e],n={},r=t.map((function(e){return{chain:[e],id:e}}));r.length>0;){var o=r.pop(),i=o.id,a=o.chain,s=l.c[i];if(s&&(!s.hot._selfAccepted||s.hot._selfInvalidated)){if(s.hot._selfDeclined)return{type:"self-declined",chain:a,moduleId:i};if(s.hot._main)return{type:"unaccepted",chain:a,moduleId:i};for(var c=0;c<s.parents.length;c++){var u=s.parents[c],p=l.c[u];if(p){if(p.hot._declinedDependencies[i])return{type:"declined",chain:a.concat([u]),moduleId:i,parentId:u};-1===t.indexOf(u)&&(p.hot._acceptedDependencies[i]?(n[u]||(n[u]=[]),d(n[u],[i])):(delete n[u],t.push(u),r.push({chain:a.concat([u]),id:u})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];-1===e.indexOf(r)&&e.push(r)}}l.f&&delete l.f.jsonpHmr,e=void 0;var s={},c=[],u={},p=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var f in t)if(l.o(t,f)){var h,m=t[f],b=!1,g=!1,v=!1,y="";switch((h=m?a(f):{type:"disposed",moduleId:f}).chain&&(y="\nUpdate propagation: "+h.chain.join(" -> ")),h.type){case"self-declined":i.onDeclined&&i.onDeclined(h),i.ignoreDeclined||(b=new Error("Aborted because of self decline: "+h.moduleId+y));break;case"declined":i.onDeclined&&i.onDeclined(h),i.ignoreDeclined||(b=new Error("Aborted because of declined dependency: "+h.moduleId+" in "+h.parentId+y));break;case"unaccepted":i.onUnaccepted&&i.onUnaccepted(h),i.ignoreUnaccepted||(b=new Error("Aborted because "+f+" is not accepted"+y));break;case"accepted":i.onAccepted&&i.onAccepted(h),g=!0;break;case"disposed":i.onDisposed&&i.onDisposed(h),v=!0;break;default:throw new Error("Unexception type "+h.type)}if(b)return{error:b};if(g)for(f in u[f]=m,d(c,h.outdatedModules),h.outdatedDependencies)l.o(h.outdatedDependencies,f)&&(s[f]||(s[f]=[]),d(s[f],h.outdatedDependencies[f]));v&&(d(c,[h.moduleId]),u[f]=p)}t=void 0;for(var w,x=[],E=0;E<c.length;E++){var A=c[E],_=l.c[A];_&&(_.hot._selfAccepted||_.hot._main)&&u[A]!==p&&!_.hot._selfInvalidated&&x.push({module:A,require:_.hot._requireSelf,errorHandler:_.hot._selfAccepted})}return{dispose:function(){var e;n.forEach((function(e){delete o[e]})),n=void 0;for(var t,r=c.slice();r.length>0;){var i=r.pop(),a=l.c[i];if(a){var d={},u=a.hot._disposeHandlers;for(E=0;E<u.length;E++)u[E].call(null,d);for(l.hmrD[i]=d,a.hot.active=!1,delete l.c[i],delete s[i],E=0;E<a.children.length;E++){var p=l.c[a.children[E]];p&&(e=p.parents.indexOf(i))>=0&&p.parents.splice(e,1)}}}for(var f in s)if(l.o(s,f)&&(a=l.c[f]))for(w=s[f],E=0;E<w.length;E++)t=w[E],(e=a.children.indexOf(t))>=0&&a.children.splice(e,1)},apply:function(e){for(var t in u)l.o(u,t)&&(l.m[t]=u[t]);for(var n=0;n<r.length;n++)r[n](l);for(var o in s)if(l.o(s,o)){var a=l.c[o];if(a){w=s[o];for(var d=[],p=[],f=[],h=0;h<w.length;h++){var m=w[h],b=a.hot._acceptedDependencies[m],g=a.hot._acceptedErrorHandlers[m];if(b){if(-1!==d.indexOf(b))continue;d.push(b),p.push(g),f.push(m)}}for(var v=0;v<d.length;v++)try{d[v].call(null,w)}catch(t){if("function"==typeof p[v])try{p[v](t,{moduleId:o,dependencyId:f[v]})}catch(n){i.onErrored&&i.onErrored({type:"accept-error-handler-errored",moduleId:o,dependencyId:f[v],error:n,originalError:t}),i.ignoreErrored||(e(n),e(t))}else i.onErrored&&i.onErrored({type:"accept-errored",moduleId:o,dependencyId:f[v],error:t}),i.ignoreErrored||e(t)}}}for(var y=0;y<x.length;y++){var E=x[y],A=E.module;try{E.require(A)}catch(t){if("function"==typeof E.errorHandler)try{E.errorHandler(t,{moduleId:A,module:l.c[A]})}catch(n){i.onErrored&&i.onErrored({type:"self-accept-error-handler-errored",moduleId:A,error:n,originalError:t}),i.ignoreErrored||(e(n),e(t))}else i.onErrored&&i.onErrored({type:"self-accept-errored",moduleId:A,error:t}),i.ignoreErrored||e(t)}}return c}}}self.webpackHotUpdatemobile_app_landingpage_template=(e,n,o)=>{for(var a in n)l.o(n,a)&&(t[a]=n[a]);o&&r.push(o),i[e]&&(i[e](),i[e]=void 0)},l.hmrI.jsonp=function(e,o){t||(t={},r=[],n=[],o.push(d)),l.o(t,e)||(t[e]=l.m[e])},l.hmrC.jsonp=function(i,s,c,u,p,f){p.push(d),e={},n=s,t=c.reduce((function(e,t){return e[t]=!1,e}),{}),r=[],i.forEach((function(t){l.o(o,t)&&void 0!==o[t]&&(u.push(a(t)),e[t]=!0)})),l.f&&(l.f.jsonpHmr=function(t,n){e&&!l.o(e,t)&&l.o(o,t)&&void 0!==o[t]&&(n.push(a(t)),e[t]=!0)})},l.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(l.p+l.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),l(347)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,